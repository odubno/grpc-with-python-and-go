# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from proto.reverse_service import reverse_pb2 as proto_dot_reverse__service_dot_reverse__pb2


class ReverserStub(object):
  """Reverser accepts a string and returns a reversed string
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Reverse = channel.unary_unary(
        '/reverse.Reverser/Reverse',
        request_serializer=proto_dot_reverse__service_dot_reverse__pb2.RequestString.SerializeToString,
        response_deserializer=proto_dot_reverse__service_dot_reverse__pb2.ResponseString.FromString,
        )


class ReverserServicer(object):
  """Reverser accepts a string and returns a reversed string
  """

  def Reverse(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ReverserServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Reverse': grpc.unary_unary_rpc_method_handler(
          servicer.Reverse,
          request_deserializer=proto_dot_reverse__service_dot_reverse__pb2.RequestString.FromString,
          response_serializer=proto_dot_reverse__service_dot_reverse__pb2.ResponseString.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'reverse.Reverser', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
